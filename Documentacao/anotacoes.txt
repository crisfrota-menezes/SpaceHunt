Desacoplamentos:

- Na classe Ente fazer o Gerenciador Gráfico ser estático(talvez até const) pois existirá apenas um 
(utilizar o padrão de projeto singleton).
- Na classe Entidade o atributo vida está publico, fazer ele privado e criar funções para trabalhar com esse atributo.
- As classes precisam ter uma construtora sem parametros(aqui da pra por apenas valores default).
- Ente precisa de um método executar e imprimir.
- Entidade não precisa ter vida e dano, isso são referentes a Personagem(ex: Plataforma é Entidade sem dano ou vida).
- Remover o imprimir de Atualizar Posicao em Personagem, e trocar a atualizarPos para calcularPos e fazer outra função para atualizarPos.
- Na Classe Personagem, trabalhar melhor com a velocidade máxima.
- Em Inimigo tem código duplicado aplicado na construtora e no método atualizaMoveAleatorio.
- Em inimigo é bom continuar com o método colisao virtual e definir ele nas classes bases.
- O método pular pode ser relativo a Personagem e a gente utiliza ele nas demais classes bases.
- É bom as Entidades terem um atributo tamanho mas é melhor a gente atrelar ele ao tamanho que o SFML nos dá.
- No gerenciador Gráfico não sei se ele precisa de método e atributo estático visto que é um singleton.
- Ajeitar o método atualizarCamera para suportar dois jogadores.
- No Gerenciado de Eventos o método verificaTeclaPressionada pode ser utilizado um switch/case.
- 


Verificações: 

- Entender e usar corretamente os namespaces.


Dúvidas:

- Na classe Personagem, no método Atualizar Posicao, está sendo aplicado a gravidade duas vezes?
- Em inimigo não entendi muito bem o dtAux.
- Em Jogador não entendi muito bem a função podePular().


Observações:

- Achei legal a função de perseguir o Jogador.

Ideias:

- Utilizar várias listas em diferentes classes. EX: Ter no Jogo em si Lista de Entidades e em fase ter Lista de Inimigos, Obstaculos, etc.
- Estudar mais padrões de projetos. 
